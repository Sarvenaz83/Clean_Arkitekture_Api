// <auto-generated />
using System;
using Infrastructure.Database.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20240103014023_NewSettingForAddNewBird")]
    partial class NewSettingForAddNewBird
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Key")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TheyAreToGetherIndex")
                        .HasColumnType("int");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.Animal.BirdModel.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c2927d8-4c03-435e-b3e4-d32e8bd0b4a5"),
                            Name = "Bird1",
                            CanFly = true,
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("0bea58a2-5114-47f5-b651-f8a088df35cb"),
                            Name = "Bird2",
                            CanFly = false,
                            Color = "Blue"
                        },
                        new
                        {
                            Id = new Guid("d9b654e1-980d-4afb-b7ad-f190dd69fe55"),
                            Name = "Bird3",
                            CanFly = true,
                            Color = "Green"
                        },
                        new
                        {
                            Id = new Guid("5938031e-9e5a-4cfd-9d3f-2ff23af3ae4f"),
                            Name = "Bird4",
                            CanFly = false,
                            Color = "Yellow"
                        });
                });

            modelBuilder.Entity("Domain.Models.Animal.CatModel.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f99034f-c3ab-422e-a27d-2628daa3a17c"),
                            Name = "Cat1",
                            Breed = "Breed1",
                            LikesToPlay = true,
                            Weight = 1
                        },
                        new
                        {
                            Id = new Guid("a97a991c-3a89-4930-b659-cdee9923022a"),
                            Name = "Cat2",
                            Breed = "Breed2",
                            LikesToPlay = false,
                            Weight = 2
                        },
                        new
                        {
                            Id = new Guid("7b6e2898-6819-46da-98cb-84cc908d2333"),
                            Name = "Cat3",
                            Breed = "Breed3",
                            LikesToPlay = true,
                            Weight = 3
                        },
                        new
                        {
                            Id = new Guid("863249d8-d2b0-4640-9631-848fb046ced7"),
                            Name = "Cat4",
                            Breed = "Breed4",
                            LikesToPlay = false,
                            Weight = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.Animal.DogModel.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("AnimalModel", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a81bf7a6-e99b-4266-9857-d85442df5a38"),
                            Name = "Dog1",
                            Breed = "Breed1",
                            Weight = 1
                        },
                        new
                        {
                            Id = new Guid("1cb1191b-d50d-49df-a247-fb56f749e6c7"),
                            Name = "Dog2",
                            Breed = "Breed2",
                            Weight = 2
                        },
                        new
                        {
                            Id = new Guid("8582d7a0-4c3f-4102-b2f8-ef0f675d8b5f"),
                            Name = "Dog3",
                            Breed = "Breed3",
                            Weight = 3
                        },
                        new
                        {
                            Id = new Guid("533282ae-a1e6-42e3-b8ca-297542e01944"),
                            Name = "Dog4",
                            Breed = "Breed4",
                            Weight = 4
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
