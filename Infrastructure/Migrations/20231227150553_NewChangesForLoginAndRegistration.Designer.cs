// <auto-generated />
using System;
using Infrastructure.Database.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20231227150553_NewChangesForLoginAndRegistration")]
    partial class NewChangesForLoginAndRegistration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanFly")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.Animal.BirdModel.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("378ffe03-b5c6-4f2c-bf2d-224e1f4d48e6"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Bird1",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("ea617490-71e6-4996-8f4c-54105d7cb6aa"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Bird2",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("540d9525-e1a5-4b2b-ac53-827972b251c1"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Bird3",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("57f2819b-2f01-4e1d-bbd0-877bb6da1a69"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Bird4",
                            OwnerUserName = "",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Animal.CatModel.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbb4d9ab-cb31-4019-b544-5c7c3ade5a3a"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Cat1",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("128b44db-6316-41e4-8c12-ab59104e2810"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Cat2",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("9006e8f5-d3d0-4ea5-93d7-ff3e650388b0"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Cat3",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("439a847e-b06e-42ed-9cd8-7aab9766a279"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Cat4",
                            OwnerUserName = "",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Animal.DogModel.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8041d935-9f4a-4b0a-9e99-faeeb245c7a4"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Dog1",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("b1c5612a-002d-43c0-b2bd-e6f202880e0e"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Dog2",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("3d37beea-16eb-4095-8522-6c28bb6a1844"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Dog3",
                            OwnerUserName = "",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("646ee85d-1921-4647-87b6-fd3e51f0e77f"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            LikesToPlay = false,
                            Name = "Dog4",
                            OwnerUserName = "",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
